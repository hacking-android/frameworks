/*
 * Decompiled with CFR 0.145.
 */
package org.apache.xalan.processor;

import java.util.HashMap;
import org.apache.xalan.processor.ProcessorAttributeSet;
import org.apache.xalan.processor.ProcessorCharacters;
import org.apache.xalan.processor.ProcessorDecimalFormat;
import org.apache.xalan.processor.ProcessorExsltFuncResult;
import org.apache.xalan.processor.ProcessorExsltFunction;
import org.apache.xalan.processor.ProcessorGlobalParamDecl;
import org.apache.xalan.processor.ProcessorGlobalVariableDecl;
import org.apache.xalan.processor.ProcessorImport;
import org.apache.xalan.processor.ProcessorInclude;
import org.apache.xalan.processor.ProcessorKey;
import org.apache.xalan.processor.ProcessorLRE;
import org.apache.xalan.processor.ProcessorNamespaceAlias;
import org.apache.xalan.processor.ProcessorOutputElem;
import org.apache.xalan.processor.ProcessorPreserveSpace;
import org.apache.xalan.processor.ProcessorStripSpace;
import org.apache.xalan.processor.ProcessorStylesheetDoc;
import org.apache.xalan.processor.ProcessorStylesheetElement;
import org.apache.xalan.processor.ProcessorTemplate;
import org.apache.xalan.processor.ProcessorTemplateElem;
import org.apache.xalan.processor.ProcessorText;
import org.apache.xalan.processor.ProcessorUnknown;
import org.apache.xalan.processor.XSLTAttributeDef;
import org.apache.xalan.processor.XSLTElementDef;
import org.apache.xalan.processor.XSLTElementProcessor;
import org.apache.xalan.templates.ElemApplyImport;
import org.apache.xalan.templates.ElemApplyTemplates;
import org.apache.xalan.templates.ElemAttribute;
import org.apache.xalan.templates.ElemCallTemplate;
import org.apache.xalan.templates.ElemChoose;
import org.apache.xalan.templates.ElemComment;
import org.apache.xalan.templates.ElemCopy;
import org.apache.xalan.templates.ElemCopyOf;
import org.apache.xalan.templates.ElemElement;
import org.apache.xalan.templates.ElemExsltFuncResult;
import org.apache.xalan.templates.ElemExsltFunction;
import org.apache.xalan.templates.ElemExtensionDecl;
import org.apache.xalan.templates.ElemExtensionScript;
import org.apache.xalan.templates.ElemFallback;
import org.apache.xalan.templates.ElemForEach;
import org.apache.xalan.templates.ElemIf;
import org.apache.xalan.templates.ElemLiteralResult;
import org.apache.xalan.templates.ElemMessage;
import org.apache.xalan.templates.ElemNumber;
import org.apache.xalan.templates.ElemOtherwise;
import org.apache.xalan.templates.ElemPI;
import org.apache.xalan.templates.ElemParam;
import org.apache.xalan.templates.ElemSort;
import org.apache.xalan.templates.ElemTemplate;
import org.apache.xalan.templates.ElemText;
import org.apache.xalan.templates.ElemTextLiteral;
import org.apache.xalan.templates.ElemUnknown;
import org.apache.xalan.templates.ElemValueOf;
import org.apache.xalan.templates.ElemVariable;
import org.apache.xalan.templates.ElemWhen;
import org.apache.xalan.templates.ElemWithParam;
import org.apache.xml.utils.QName;

public class XSLTSchema
extends XSLTElementDef {
    private HashMap m_availElems = new HashMap();

    XSLTSchema() {
        this.build();
    }

    void addAvailableElement(QName qName) {
        this.m_availElems.put(qName, qName);
    }

    void build() {
        Object object = new XSLTAttributeDef(null, "href", 2, true, false, 1);
        Object object2 = new XSLTAttributeDef(null, "elements", 12, true, false, 1);
        XSLTAttributeDef xSLTAttributeDef = new XSLTAttributeDef(null, "method", 9, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef2 = new XSLTAttributeDef(null, "version", 13, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef3 = new XSLTAttributeDef(null, "encoding", 1, false, false, 1);
        Object object3 = new XSLTAttributeDef(null, "omit-xml-declaration", 8, false, false, 1);
        Object object4 = new XSLTAttributeDef(null, "standalone", 8, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef4 = new XSLTAttributeDef(null, "doctype-public", 1, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef5 = new XSLTAttributeDef(null, "doctype-system", 1, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef6 = new XSLTAttributeDef(null, "cdata-section-elements", 19, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef7 = new XSLTAttributeDef(null, "indent", 8, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef8 = new XSLTAttributeDef(null, "media-type", 1, false, false, 1);
        Object object5 = new XSLTAttributeDef(null, "name", 9, true, false, 1);
        Object object6 = new XSLTAttributeDef(null, "name", 18, true, true, 2);
        Object object7 = new XSLTAttributeDef(null, "name", 17, true, true, 2);
        Object object8 = new XSLTAttributeDef(null, "name", 9, false, false, 1);
        Object object9 = new XSLTAttributeDef(null, "use", 5, true, false, 1);
        Object object10 = new XSLTAttributeDef(null, "namespace", 2, false, true, 2);
        Object object11 = new XSLTAttributeDef(null, "decimal-separator", 6, false, 1, ".");
        XSLTAttributeDef xSLTAttributeDef9 = new XSLTAttributeDef(null, "infinity", 1, false, 1, "Infinity");
        Object object12 = new XSLTAttributeDef(null, "minus-sign", 6, false, 1, "-");
        XSLTAttributeDef xSLTAttributeDef10 = new XSLTAttributeDef(null, "NaN", 1, false, 1, "NaN");
        Object object13 = new XSLTAttributeDef(null, "percent", 6, false, 1, "%");
        XSLTAttributeDef xSLTAttributeDef11 = new XSLTAttributeDef(null, "per-mille", 6, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef12 = new XSLTAttributeDef(null, "zero-digit", 6, false, 1, "0");
        XSLTAttributeDef xSLTAttributeDef13 = new XSLTAttributeDef(null, "digit", 6, false, 1, "#");
        XSLTAttributeDef xSLTAttributeDef14 = new XSLTAttributeDef(null, "pattern-separator", 6, false, 1, ";");
        XSLTAttributeDef xSLTAttributeDef15 = new XSLTAttributeDef(null, "grouping-separator", 6, false, 1, ",");
        Object object14 = new XSLTAttributeDef(null, "use-attribute-sets", 10, false, false, 1);
        Object object15 = new XSLTAttributeDef(null, "test", 5, true, false, 1);
        Object object16 = new XSLTAttributeDef(null, "select", 5, true, false, 1);
        XSLTAttributeDef xSLTAttributeDef16 = new XSLTAttributeDef(null, "select", 5, false, false, 1);
        Object object17 = new XSLTAttributeDef(null, "select", 5, false, 1, "node()");
        Object object18 = new XSLTAttributeDef(null, "select", 5, false, 1, ".");
        Object object19 = new XSLTAttributeDef(null, "match", 4, true, false, 1);
        Object object20 = new XSLTAttributeDef(null, "match", 4, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef17 = new XSLTAttributeDef(null, "priority", 7, false, false, 1);
        Object object21 = new XSLTAttributeDef(null, "mode", 9, false, false, 1);
        Object object22 = new XSLTAttributeDef("http://www.w3.org/XML/1998/namespace", "space", false, false, false, 2, "default", 2, "preserve", 1);
        Object object23 = new XSLTAttributeDef("http://www.w3.org/XML/1998/namespace", "space", 2, false, true, 1);
        Object object24 = new XSLTAttributeDef(null, "stylesheet-prefix", 1, true, false, 1);
        Object object25 = new XSLTAttributeDef(null, "result-prefix", 1, true, false, 1);
        Object object26 = new XSLTAttributeDef(null, "disable-output-escaping", 8, false, false, 1);
        Object object27 = new XSLTAttributeDef(null, "level", false, false, false, 1, "single", 1, "multiple", 2, "any", 3);
        ((XSLTAttributeDef)object27).setDefault("single");
        Object object28 = new XSLTAttributeDef(null, "count", 4, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef18 = new XSLTAttributeDef(null, "from", 4, false, false, 1);
        Object object29 = new XSLTAttributeDef(null, "value", 5, false, false, 1);
        Object object30 = new XSLTAttributeDef(null, "format", 1, false, true, 1);
        ((XSLTAttributeDef)object30).setDefault("1");
        Object object31 = new XSLTAttributeDef(null, "lang", 13, false, true, 1);
        Object object32 = new XSLTAttributeDef(null, "letter-value", false, true, false, 1, "alphabetic", 1, "traditional", 2);
        Object object33 = new XSLTAttributeDef(null, "grouping-separator", 6, false, true, 1);
        Object object34 = new XSLTAttributeDef(null, "grouping-size", 7, false, true, 1);
        Object object35 = new XSLTAttributeDef(null, "data-type", false, true, true, 1, "text", 1, "number", 1);
        ((XSLTAttributeDef)object35).setDefault("text");
        Object object36 = new XSLTAttributeDef(null, "order", false, true, false, 1, "ascending", 1, "descending", 2);
        ((XSLTAttributeDef)object36).setDefault("ascending");
        Object object37 = new XSLTAttributeDef(null, "case-order", false, true, false, 1, "upper-first", 1, "lower-first", 2);
        Object object38 = new XSLTAttributeDef(null, "terminate", 8, false, false, 1);
        ((XSLTAttributeDef)object38).setDefault("no");
        XSLTAttributeDef[] arrxSLTAttributeDef = new XSLTAttributeDef("http://www.w3.org/1999/XSL/Transform", "exclude-result-prefixes", 20, false, false, 1);
        Object object39 = new XSLTAttributeDef("http://www.w3.org/1999/XSL/Transform", "extension-element-prefixes", 15, false, false, 1);
        XSLTAttributeDef xSLTAttributeDef19 = new XSLTAttributeDef("http://www.w3.org/1999/XSL/Transform", "use-attribute-sets", 10, false, false, 1);
        Object object40 = new XSLTAttributeDef("http://www.w3.org/1999/XSL/Transform", "version", 13, false, false, 1);
        Object object41 = new XSLTElementDef(this, null, "text()", null, null, null, new ProcessorCharacters(), ElemTextLiteral.class);
        ((XSLTElementDef)object41).setType(2);
        XSLTElementDef xSLTElementDef = new XSLTElementDef(this, null, "text()", null, null, null, null, ElemTextLiteral.class);
        ((XSLTElementDef)object41).setType(2);
        Object object42 = new XSLTAttributeDef(null, "*", 3, false, true, 2);
        XSLTAttributeDef xSLTAttributeDef20 = new XSLTAttributeDef("http://www.w3.org/1999/XSL/Transform", "*", 1, false, false, 2);
        Object object43 = new XSLTElementDef[23];
        Object object44 = new XSLTElementDef[24];
        Object object45 = new XSLTElementDef[24];
        Object object46 = new XSLTElementDef[24];
        Object[] arrobject = new XSLTElementDef[15];
        Object object47 = new ProcessorLRE();
        object47 = new XSLTElementDef(this, null, "*", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object23, arrxSLTAttributeDef, object39, xSLTAttributeDef19, object40, xSLTAttributeDef20, object42}, (XSLTElementProcessor)object47, (Class)ElemLiteralResult.class, 20, true);
        object23 = new ProcessorUnknown();
        object39 = new XSLTElementDef(this, "*", "unknown", null, (XSLTElementDef[])object44, new XSLTAttributeDef[]{arrxSLTAttributeDef, object39, xSLTAttributeDef19, object40, xSLTAttributeDef20, object42}, (XSLTElementProcessor)object23, (Class)ElemUnknown.class, 20, true);
        arrxSLTAttributeDef = new ProcessorTemplateElem();
        arrxSLTAttributeDef = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "value-of", null, null, new XSLTAttributeDef[]{object16, object26}, (XSLTElementProcessor)arrxSLTAttributeDef, ElemValueOf.class, 20, true);
        object40 = new ProcessorTemplateElem();
        object40 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "copy-of", null, null, new XSLTAttributeDef[]{object16}, (XSLTElementProcessor)object40, ElemCopyOf.class, 20, true);
        object42 = new ProcessorTemplateElem();
        object28 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "number", null, null, new XSLTAttributeDef[]{object27, object28, xSLTAttributeDef18, object29, object30, object31, object32, object33, object34}, (XSLTElementProcessor)object42, ElemNumber.class, 20, true);
        object34 = new ProcessorTemplateElem();
        object36 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "sort", null, null, new XSLTAttributeDef[]{object18, object31, object35, object36, object37}, (XSLTElementProcessor)object34, ElemSort.class, 19, true);
        object31 = new ProcessorTemplateElem();
        object37 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "with-param", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object5, xSLTAttributeDef16}, (XSLTElementProcessor)object31, (Class)ElemWithParam.class, 19, true);
        object31 = new ProcessorTemplateElem();
        object17 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "apply-templates", null, new XSLTElementDef[]{object36, object37}, new XSLTAttributeDef[]{object17, object21}, (XSLTElementProcessor)object31, ElemApplyTemplates.class, 20, true);
        object31 = new ProcessorTemplateElem();
        object31 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "apply-imports", null, null, new XSLTAttributeDef[0], (XSLTElementProcessor)object31, ElemApplyImport.class);
        object35 = new ProcessorTemplateElem();
        object16 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "for-each", null, (XSLTElementDef[])object45, new XSLTAttributeDef[]{object16, object22}, (XSLTElementProcessor)object35, ElemForEach.class, true, false, true, 20, true);
        object35 = new ProcessorTemplateElem();
        object35 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "if", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object15, object22}, (XSLTElementProcessor)object35, (Class)ElemIf.class, 20, true);
        object18 = new ProcessorTemplateElem();
        object15 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "when", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object15, object22}, (XSLTElementProcessor)object18, ElemWhen.class, false, true, 1, true);
        object18 = new ProcessorTemplateElem();
        object34 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "otherwise", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object22}, (XSLTElementProcessor)object18, ElemOtherwise.class, false, false, 2, false);
        object18 = new ProcessorTemplateElem();
        object18 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "choose", null, new XSLTElementDef[]{object15, object34}, new XSLTAttributeDef[]{object22}, (XSLTElementProcessor)object18, ElemChoose.class, true, false, true, 20, true);
        object15 = new ProcessorTemplateElem();
        object15 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "attribute", null, (XSLTElementDef[])arrobject, new XSLTAttributeDef[]{object6, object10, object22}, (XSLTElementProcessor)object15, ElemAttribute.class, 20, true);
        object34 = new ProcessorTemplateElem();
        object37 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "call-template", null, new XSLTElementDef[]{object37}, new XSLTAttributeDef[]{object5}, (XSLTElementProcessor)object34, ElemCallTemplate.class, 20, true);
        object34 = new ProcessorTemplateElem();
        object34 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "variable", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object5, xSLTAttributeDef16}, (XSLTElementProcessor)object34, (Class)ElemVariable.class, 20, true);
        object27 = new ProcessorTemplateElem();
        object27 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "param", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object5, xSLTAttributeDef16}, (XSLTElementProcessor)object27, (Class)ElemParam.class, 19, true);
        object30 = new ProcessorText();
        object26 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "text", null, new XSLTElementDef[]{object41}, new XSLTAttributeDef[]{object26}, (XSLTElementProcessor)object30, ElemText.class, 20, true);
        object30 = new ProcessorTemplateElem();
        object7 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "processing-instruction", null, (XSLTElementDef[])arrobject, new XSLTAttributeDef[]{object7, object22}, (XSLTElementProcessor)object30, ElemPI.class, 20, true);
        object30 = new ProcessorTemplateElem();
        object6 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "element", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object6, object10, object14, object22}, (XSLTElementProcessor)object30, (Class)ElemElement.class, 20, true);
        object10 = new ProcessorTemplateElem();
        object10 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "comment", null, (XSLTElementDef[])arrobject, new XSLTAttributeDef[]{object22}, (XSLTElementProcessor)object10, ElemComment.class, 20, true);
        object30 = new ProcessorTemplateElem();
        object30 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "copy", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object22, object14}, (XSLTElementProcessor)object30, (Class)ElemCopy.class, 20, true);
        object33 = new ProcessorTemplateElem();
        object33 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "message", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object38}, (XSLTElementProcessor)object33, (Class)ElemMessage.class, 20, true);
        object38 = new ProcessorTemplateElem();
        object32 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "fallback", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object22}, (XSLTElementProcessor)object38, (Class)ElemFallback.class, 20, true);
        object38 = new ProcessorExsltFunction();
        object38 = new XSLTElementDef(this, "http://exslt.org/functions", "function", null, (XSLTElementDef[])object46, new XSLTAttributeDef[]{object5}, (XSLTElementProcessor)object38, ElemExsltFunction.class);
        object29 = new ProcessorExsltFuncResult();
        object29 = new XSLTElementDef(this, "http://exslt.org/functions", "result", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{xSLTAttributeDef16}, (XSLTElementProcessor)object29, ElemExsltFuncResult.class);
        int n = 0 + 1;
        object43[0] = object41;
        int n2 = n + 1;
        object43[n] = object17;
        n = n2 + 1;
        object43[n2] = object37;
        int n3 = n + 1;
        object43[n] = object31;
        n2 = n3 + 1;
        object43[n3] = object16;
        n3 = n2 + 1;
        object43[n2] = arrxSLTAttributeDef;
        n = n3 + 1;
        object43[n3] = object40;
        n2 = n + 1;
        object43[n] = object28;
        n = n2 + 1;
        object43[n2] = object18;
        n3 = n + 1;
        object43[n] = object35;
        n2 = n3 + 1;
        object43[n3] = object26;
        n = n2 + 1;
        object43[n2] = object30;
        n2 = n + 1;
        object43[n] = object34;
        n = n2 + 1;
        object43[n2] = object33;
        n2 = n + 1;
        object43[n] = object32;
        n = n2 + 1;
        object43[n2] = object7;
        n2 = n + 1;
        object43[n] = object10;
        n = n2 + 1;
        object43[n2] = object6;
        n3 = n + 1;
        object43[n] = object15;
        n2 = n3 + 1;
        object43[n3] = object47;
        n = n2 + 1;
        object43[n2] = object39;
        n2 = n + 1;
        object43[n] = object38;
        n = n2 + 1;
        object43[n2] = object29;
        System.arraycopy(object43, 0, object44, 0, n);
        System.arraycopy(object43, 0, object45, 0, n);
        System.arraycopy(object43, 0, object46, 0, n);
        object44[n] = object27;
        object45[n] = object36;
        object46[n] = object27;
        n2 = 0 + 1;
        arrobject[0] = object41;
        n = n2 + 1;
        arrobject[n2] = object17;
        n2 = n + 1;
        arrobject[n] = object37;
        n3 = n2 + 1;
        arrobject[n2] = object31;
        n = n3 + 1;
        arrobject[n3] = object16;
        n2 = n + 1;
        arrobject[n] = arrxSLTAttributeDef;
        n = n2 + 1;
        arrobject[n2] = object40;
        n2 = n + 1;
        arrobject[n] = object28;
        n = n2 + 1;
        arrobject[n2] = object18;
        n2 = n + 1;
        arrobject[n] = object35;
        n = n2 + 1;
        arrobject[n2] = object26;
        n2 = n + 1;
        arrobject[n] = object30;
        n = n2 + 1;
        arrobject[n2] = object34;
        n2 = n + 1;
        arrobject[n] = object33;
        arrobject[n2] = object32;
        object46 = new ProcessorImport();
        object46 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "import", null, null, new XSLTAttributeDef[]{object}, (XSLTElementProcessor)object46, null, 1, true);
        object45 = new ProcessorInclude();
        object = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "include", null, null, new XSLTAttributeDef[]{object}, (XSLTElementProcessor)object45, null, 20, true);
        arrxSLTAttributeDef = new XSLTAttributeDef[]{new XSLTAttributeDef(null, "lang", 13, true, false, 2), new XSLTAttributeDef(null, "src", 2, false, false, 2)};
        arrobject = new XSLTAttributeDef[]{new XSLTAttributeDef(null, "prefix", 13, true, false, 2), new XSLTAttributeDef(null, "elements", 14, false, false, 2), new XSLTAttributeDef(null, "functions", 14, false, false, 2)};
        object45 = new ProcessorStripSpace();
        object45 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "strip-space", null, null, new XSLTAttributeDef[]{object2}, (XSLTElementProcessor)object45, null, 20, true);
        object40 = new ProcessorPreserveSpace();
        object2 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "preserve-space", null, null, new XSLTAttributeDef[]{object2}, (XSLTElementProcessor)object40, null, 20, true);
        object40 = XSLTAttributeDef.m_foreignAttr;
        object6 = new ProcessorOutputElem();
        object3 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "output", null, null, new XSLTAttributeDef[]{xSLTAttributeDef, xSLTAttributeDef2, xSLTAttributeDef3, object3, object4, xSLTAttributeDef4, xSLTAttributeDef5, xSLTAttributeDef6, xSLTAttributeDef7, xSLTAttributeDef8, object40}, (XSLTElementProcessor)object6, null, 20, true);
        object4 = new ProcessorKey();
        object19 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "key", null, null, new XSLTAttributeDef[]{object5, object19, object9}, (XSLTElementProcessor)object4, null, 20, true);
        object9 = new ProcessorDecimalFormat();
        object11 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "decimal-format", null, null, new XSLTAttributeDef[]{object8, object11, xSLTAttributeDef15, xSLTAttributeDef9, object12, xSLTAttributeDef10, object13, xSLTAttributeDef11, xSLTAttributeDef12, xSLTAttributeDef13, xSLTAttributeDef14}, (XSLTElementProcessor)object9, null, 20, true);
        object12 = new ProcessorAttributeSet();
        object14 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "attribute-set", null, new XSLTElementDef[]{object15}, new XSLTAttributeDef[]{object5, object14}, (XSLTElementProcessor)object12, null, 20, true);
        object12 = new ProcessorGlobalVariableDecl();
        object12 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "variable", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object5, xSLTAttributeDef16}, (XSLTElementProcessor)object12, (Class)ElemVariable.class, 20, true);
        object13 = new ProcessorGlobalParamDecl();
        object5 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "param", null, (XSLTElementDef[])object43, new XSLTAttributeDef[]{object5, xSLTAttributeDef16}, (XSLTElementProcessor)object13, (Class)ElemParam.class, 20, true);
        object43 = new ProcessorTemplate();
        object8 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "template", null, (XSLTElementDef[])object44, new XSLTAttributeDef[]{object20, object8, xSLTAttributeDef17, object21, object22}, (XSLTElementProcessor)object43, ElemTemplate.class, true, 20, true);
        object21 = new ProcessorNamespaceAlias();
        object24 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "namespace-alias", null, null, new XSLTAttributeDef[]{object24, object25}, (XSLTElementProcessor)object21, null, 20, true);
        object25 = new ProcessorLRE();
        object21 = new XSLTElementDef(this, "http://xml.apache.org/xalan", "script", null, new XSLTElementDef[]{object41}, arrxSLTAttributeDef, (XSLTElementProcessor)object25, ElemExtensionScript.class, 20, true);
        object25 = new ProcessorLRE();
        object25 = new XSLTElementDef(this, "http://xml.apache.org/xalan", "component", null, new XSLTElementDef[]{object21}, (XSLTAttributeDef[])arrobject, (XSLTElementProcessor)object25, ElemExtensionDecl.class);
        object21 = new ProcessorLRE();
        object41 = new XSLTElementDef(this, "http://xml.apache.org/xslt", "script", null, new XSLTElementDef[]{object41}, arrxSLTAttributeDef, (XSLTElementProcessor)object21, ElemExtensionScript.class, 20, true);
        object21 = new ProcessorLRE();
        object44 = new XSLTElementDef(this, "http://xml.apache.org/xslt", "component", null, new XSLTElementDef[]{object41}, (XSLTAttributeDef[])arrobject, (XSLTElementProcessor)object21, ElemExtensionDecl.class);
        object43 = new XSLTAttributeDef(null, "exclude-result-prefixes", 20, false, false, 2);
        xSLTAttributeDef17 = new XSLTAttributeDef(null, "extension-element-prefixes", 15, false, false, 2);
        object41 = new XSLTAttributeDef(null, "id", 1, false, false, 2);
        object21 = new XSLTAttributeDef(null, "version", 13, true, false, 2);
        object20 = new ProcessorStylesheetElement();
        object22 = new XSLTElementDef(this, "http://www.w3.org/1999/XSL/Transform", "stylesheet", "transform", new XSLTElementDef[]{object, object46, xSLTElementDef, object39, object45, object2, object3, object19, object11, object14, object12, object5, object8, object24, object25, object44, object38}, new XSLTAttributeDef[]{xSLTAttributeDef17, object43, object41, object21, object22}, (XSLTElementProcessor)object20, null, true, -1, false);
        ((XSLTElementDef)object46).setElements(new XSLTElementDef[]{object22, object47, object39});
        ((XSLTElementDef)object).setElements(new XSLTElementDef[]{object22, object47, object39});
        object41 = new ProcessorStylesheetDoc();
        this.build(null, null, null, new XSLTElementDef[]{object22, xSLTElementDef, object47, object39}, null, (XSLTElementProcessor)object41, null);
    }

    public boolean elementAvailable(QName qName) {
        return this.m_availElems.containsKey(qName);
    }

    public HashMap getElemsAvailable() {
        return this.m_availElems;
    }
}

